// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Product {
  id          String      @id @default(uuid())
  name        String
  brand       String
  description String?
  price       Float
  imageUrl    String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  inventory   Inventory?
  orderItems  OrderItem[]
  analytics   ProductAnalytics[]
}

model Inventory {
  id        String   @id @default(uuid())
  productId String   @unique
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id            String      @id @default(uuid())
  userId        String
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  customerName  String      // Adding customer name
  customerPhone String      // Adding customer phone
  customerCountry String    // Adding customer country for analytics
  pickupDetails String?     // Adding pickup details
  total         Float
  status        OrderStatus @default(PENDING)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  orderItems    OrderItem[]
  analytics     OrderAnalytics?
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  quantity  Int
  price     Float
}

// Dedicated analytics models for better data organization and querying
model OrderAnalytics {
  id           String   @id @default(uuid())
  orderId      String   @unique
  order        Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  country      String
  orderDate    DateTime
  totalAmount  Float
  productCount Int
  createdAt    DateTime @default(now())
}

model ProductAnalytics {
  id          String   @id @default(uuid())
  productId   String
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  country     String
  quantity    Int
  orderDate   DateTime
  createdAt   DateTime @default(now())

  @@index([country])
  @@index([productId, country])
  @@index([orderDate])
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELLED
}
